steps:
# Build and deploy the backend
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Backend Docker Image'
  args: [ 'build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-images/cerberus-backend:$BUILD_ID', './cerberus_universal_backend' ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Backend Docker Image'
  args: [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-images/cerberus-backend:$BUILD_ID' ]
  waitFor: ['Build Backend Docker Image']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Backend to Cloud Run'
  entrypoint: gcloud
  args:
    steps:
# Build and push the backend
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build and Push Backend'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/cerberus-backend:latest', '.' ]
  dir: 'cerberus_universal_backend'

# Install Flutter SDK once and cache it for both frontends
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Install and Cache Flutter SDK'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Check if Flutter SDK is already cached
      if [ -d "/flutter/bin" ] && command -v /flutter/bin/flutter > /dev/null;
      then
        echo "Flutter SDK already exists in cache. Skipping download."
        /flutter/bin/flutter doctor
      else
        echo "Flutter SDK not found in cache. Cloning and installing..."
        apt-get update && apt-get install -y git unzip # Install git, unzip for cloning, and dart sdk extraction
        git clone https://github.com/flutter/flutter.git /flutter
        git config --global --add safe.directory /flutter # Add safe directory for git ownership issue
        cd /flutter
        git checkout 3.35.1
        ./bin/flutter --version # Check Flutter version
        ./bin/flutter upgrade
        echo "Running flutter doctor..."
        ./bin/flutter doctor
      fi

# Install common dependencies
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Install Dependencies'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      apt-get update && apt-get install -y nodejs npm unzip
      npm install -g firebase-tools@13.11.2
  waitFor: ['Install and Cache Flutter SDK']

# Build and deploy the cerberus_frontend
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Get dependencies for Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" # Add flutter to PATH
      flutter pub get
  dir: 'cerberus_frontend'
  waitFor: ['Install Dependencies']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Build Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" # Add flutter to PATH
      apt-get update && apt-get install -y unzip
      flutter build web --release
  dir: 'cerberus_frontend'
  waitFor: ['Get dependencies for Cerberus Frontend']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      apt-get update && apt-get install -y nodejs npm
      npm install -g firebase-tools@13.11.2
      npx firebase-tools deploy --only 'hosting:cerberus' --project 'cerberus-data-cloud'
  waitFor: ['Build Cerberus Frontend']

# Build and deploy all campaign frontends
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Build and Deploy All Campaigns'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      apt-get update && apt-get install -y nodejs npm unzip
      npm install -g firebase-tools@13.11.2
      chmod +x build_campaigns.sh
      ./build_campaigns.sh
  dir: 'universal_campaign_frontend'
  waitFor: ['Install Dependencies']

images:
- 'gcr.io/$PROJECT_ID/cerberus-backend:latest'

options:
  substitution_option: 'ALLOW_LOOSE'
  volumes:
    - name: 'flutter_sdk'
      path: '/flutter'
substitutions:
  _REGION: 'us-south1'
  _INSTANCE_CONNECTION_NAME: 'cerberus-data-cloud:us-south1:cerberus-db'
  _PROJECT_ID: 'cerberus-data-cloud'
  _FLUTTER_VERSION: '3.35.1'

  waitFor: ['Push Backend Docker Image']

# Install Flutter SDK once and cache it for both frontends
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Install and Cache Flutter SDK'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Check if Flutter SDK is already cached
      if [ -d "/flutter/bin" ] && command -v /flutter/bin/flutter > /dev/null;
      then
        echo "Flutter SDK already exists in cache. Skipping download."
        /flutter/bin/flutter doctor
      else
        echo "Flutter SDK not found in cache. Cloning and installing..."
        apt-get update && apt-get install -y git unzip # Install git, unzip for cloning, and dart sdk extraction
        git clone https://github.com/flutter/flutter.git /flutter
        git config --global --add safe.directory /flutter # Add safe directory for git ownership issue
        cd /flutter
        git checkout 3.35.1
        ./bin/flutter --version # Check Flutter version
        ./bin/flutter upgrade
        echo "Running flutter doctor..."
        ./bin/flutter doctor
      fi

# Install common dependencies
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Install Dependencies'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      apt-get update && apt-get install -y nodejs npm unzip
      npm install -g firebase-tools@13.11.2
  waitFor: ['Install and Cache Flutter SDK']

# Build and deploy the cerberus_frontend
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Get dependencies for Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" # Add flutter to PATH
      flutter pub get
  dir: 'cerberus_frontend'
  waitFor: ['Install Dependencies']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Build Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" # Add flutter to PATH
      apt-get update && apt-get install -y unzip
      flutter build web --release
  dir: 'cerberus_frontend'
  waitFor: ['Get dependencies for Cerberus Frontend']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      apt-get update && apt-get install -y nodejs npm
      npm install -g firebase-tools@13.11.2
      npx firebase-tools deploy --only 'hosting:cerberus' --project 'cerberus-data-cloud'
  waitFor: ['Build Cerberus Frontend']

# Build and deploy all campaign frontends
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Build and Deploy All Campaigns'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      apt-get update && apt-get install -y nodejs npm unzip
      npm install -g firebase-tools@13.11.2
      chmod +x build_campaigns.sh
      ./build_campaigns.sh
  dir: 'universal_campaign_frontend'
  waitFor: ['Install Dependencies']

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-images/cerberus-backend:$BUILD_ID'

options:
  substitution_option: 'ALLOW_LOOSE'
  volumes:
    - name: 'flutter_sdk'
      path: '/flutter'
substitutions:
  _REGION: 'us-south1'
  _INSTANCE_CONNECTION_NAME: 'cerberus-data-cloud:us-south1:cerberus-db'
  _PROJECT_ID: 'cerberus-data-cloud'
  _FLUTTER_VERSION: '3.35.1'