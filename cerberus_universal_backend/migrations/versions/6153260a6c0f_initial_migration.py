"""Initial migration.

Revision ID: 6153260a6c0f
Revises: 
Create Date: 2025-08-12 10:49:28.586348

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6153260a6c0f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(length=100), nullable=True),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.Enum('INSERT', 'UPDATE', 'DELETE', name='action_type_enum'), nullable=True),
    sa.Column('changed_by_user', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('backup_logs',
    sa.Column('backup_id', sa.Integer(), nullable=False),
    sa.Column('backup_type', sa.Enum('Full', 'Incremental', 'WAL', name='backup_type_enum'), nullable=True),
    sa.Column('backup_location', sa.String(length=255), nullable=True),
    sa.Column('backup_size', sa.BigInteger(), nullable=True),
    sa.Column('backup_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('Success', 'Failed', name='status_enum'), nullable=True),
    sa.Column('retention_expiry_date', sa.Date(), nullable=True),
    sa.Column('encryption_status', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('backup_id')
    )
    op.create_table('data_sources',
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('source_name', sa.String(length=255), nullable=True),
    sa.Column('source_type', sa.Enum('Manual', 'API', 'Import', name='source_type_enum'), nullable=True),
    sa.Column('api_endpoint', sa.String(length=255), nullable=True),
    sa.Column('import_date', sa.Date(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('data_retention_period', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('source_id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('filter_settings', sa.JSON(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('last_checked', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('voters',
    sa.Column('voter_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=50), nullable=True),
    sa.Column('street_address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('county', sa.String(length=100), nullable=True),
    sa.Column('precinct', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email_address', sa.String(length=255), nullable=True),
    sa.Column('employer', sa.String(length=255), nullable=True),
    sa.Column('occupation', sa.String(length=255), nullable=True),
    sa.Column('contact_email', sa.Boolean(), nullable=True),
    sa.Column('contact_phone', sa.Boolean(), nullable=True),
    sa.Column('contact_mail', sa.Boolean(), nullable=True),
    sa.Column('contact_sms', sa.Boolean(), nullable=True),
    sa.Column('registration_status', sa.String(length=50), nullable=True),
    sa.Column('voter_registration_id', sa.String(length=100), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('party_affiliation', sa.String(length=100), nullable=True),
    sa.Column('engagement_score', sa.Integer(), nullable=True),
    sa.Column('last_contacted_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('preferred_contact_method', sa.String(length=50), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('source_campaign_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_campaign_id'], ['campaigns.campaign_id'], name='fk_voters_source_campaign_id', use_alter=True),
    sa.PrimaryKeyConstraint('voter_id')
    )
    op.create_index(op.f('ix_voters_email_address'), 'voters', ['email_address'], unique=True)
    op.create_index(op.f('ix_voters_last_name'), 'voters', ['last_name'], unique=False)
    op.create_index(op.f('ix_voters_phone_number'), 'voters', ['phone_number'], unique=True)
    op.create_index(op.f('ix_voters_voter_registration_id'), 'voters', ['voter_registration_id'], unique=True)
    op.create_index(op.f('ix_voters_zip_code'), 'voters', ['zip_code'], unique=False)
    op.create_table('addresses',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=7), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=10, scale=7), nullable=True),
    sa.Column('census_block', sa.String(length=50), nullable=True),
    sa.Column('ward', sa.String(length=50), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('mail_forwarding_info', sa.String(), nullable=True),
    sa.Column('parent_address_id', sa.Integer(), nullable=True),
    sa.Column('address_metadata', sa.JSON(), nullable=True),
    sa.Column('change_history', sa.JSON(), nullable=True),
    sa.Column('enrichment_status', sa.Enum('Pending', 'Enriched', 'Failed', name='enrichment_status_enum'), nullable=True),
    sa.Column('property_type', sa.Enum('Residential', 'Commercial', 'Mixed', 'Vacant', name='property_type_enum'), nullable=True),
    sa.Column('delivery_point_code', sa.String(length=10), nullable=True),
    sa.Column('last_validated_date', sa.Date(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['parent_address_id'], ['addresses.address_id'], name='fk_addresses_parent_address_id'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_addresses_source_id'),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_index('idx_addresses_geom', 'addresses', ['geom'], unique=False, postgresql_using='gist')
    op.create_table('campaigns',
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('campaign_name', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('campaign_type', sa.Enum('Local', 'State', 'Federal', 'Issue', name='campaign_type_enum'), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_campaigns_source_id'),
    sa.PrimaryKeyConstraint('campaign_id')
    )
    op.create_table('districts',
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('district_name', sa.String(length=255), nullable=True),
    sa.Column('district_type', sa.Enum('Federal', 'State', 'Local', 'Special', name='district_type_enum'), nullable=True),
    sa.Column('boundaries', sa.JSON(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('district_code', sa.String(length=50), nullable=True),
    sa.Column('election_cycle', sa.String(length=50), nullable=True),
    sa.Column('population_estimate', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_districts_source_id'),
    sa.PrimaryKeyConstraint('district_id')
    )
    op.create_index('idx_districts_geom', 'districts', ['geom'], unique=False, postgresql_using='gist')
    op.create_table('government_bodies',
    sa.Column('body_id', sa.Integer(), nullable=False),
    sa.Column('body_name', sa.String(length=255), nullable=True),
    sa.Column('jurisdiction', sa.String(length=100), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('agenda_url', sa.Text(), nullable=True),
    sa.Column('scraper_type', sa.Text(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_scraped_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_government_bodies_source_id'),
    sa.PrimaryKeyConstraint('body_id')
    )
    op.create_table('persons',
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('Male', 'Female', 'Non-binary', 'Other', 'Unknown', name='gender_enum'), nullable=True),
    sa.Column('party_affiliation', sa.String(length=100), nullable=True),
    sa.Column('ethnicity', sa.String(length=100), nullable=True),
    sa.Column('income_bracket', sa.Enum('Low', 'Middle', 'High', 'Unknown', name='income_bracket_enum'), nullable=True),
    sa.Column('education_level', sa.String(length=100), nullable=True),
    sa.Column('voter_propensity_score', sa.Integer(), nullable=True),
    sa.Column('registration_status', sa.Enum('Active', 'Inactive', 'Purged', name='registration_status_enum'), nullable=True),
    sa.Column('status_change_date', sa.Date(), nullable=True),
    sa.Column('consent_opt_in', sa.Boolean(), nullable=True),
    sa.Column('duplicate_flag', sa.Boolean(), nullable=True),
    sa.Column('last_contact_date', sa.Date(), nullable=True),
    sa.Column('ml_tags', sa.JSON(), nullable=True),
    sa.Column('change_history', sa.JSON(), nullable=True),
    sa.Column('preferred_contact_method', sa.Enum('Email', 'Phone', 'Mail', 'SocialMedia', 'None', name='preferred_contact_method_enum'), nullable=True),
    sa.Column('language_preference', sa.String(length=50), nullable=True),
    sa.Column('accessibility_needs', sa.String(), nullable=True),
    sa.Column('last_updated_by', sa.String(length=255), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_persons_source_id'),
    sa.PrimaryKeyConstraint('person_id')
    )
    op.create_table('address_districts',
    sa.Column('address_district_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.address_id'], name='fk_address_districts_address_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['district_id'], ['districts.district_id'], name='fk_address_districts_district_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_address_districts_source_id'),
    sa.PrimaryKeyConstraint('address_district_id'),
    sa.UniqueConstraint('address_id', 'district_id', name='uq_address_district')
    )
    op.create_table('agendas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(), nullable=False),
    sa.Column('pdf_url', sa.String(), nullable=False),
    sa.Column('scraped_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['body_id'], ['government_bodies.body_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('body_id', 'date', 'pdf_url', name='_body_date_url_uc')
    )
    op.create_table('campaign_voters',
    sa.Column('campaign_voter_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('voter_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], name='fk_campaign_voters_campaign_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['voter_id'], ['voters.voter_id'], name='fk_campaign_voters_voter_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('campaign_voter_id'),
    sa.UniqueConstraint('campaign_id', 'voter_id', name='uq_campaign_voter')
    )
    op.create_table('donations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('payment_status', sa.Enum('succeeded', 'pending', 'failed', 'requires_payment_method', 'requires_confirmation', name='payment_status_enum'), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('address_line1', sa.String(length=255), nullable=True),
    sa.Column('address_line2', sa.String(length=255), nullable=True),
    sa.Column('address_city', sa.String(length=100), nullable=True),
    sa.Column('address_state', sa.String(length=50), nullable=True),
    sa.Column('address_zip', sa.String(length=20), nullable=True),
    sa.Column('employer', sa.String(length=255), nullable=True),
    sa.Column('occupation', sa.String(length=255), nullable=True),
    sa.Column('email', app.models.person_identifier.EncryptedString(), nullable=True),
    sa.Column('phone_number', app.models.person_identifier.EncryptedString(), nullable=True),
    sa.Column('contact_email', sa.Boolean(), nullable=True),
    sa.Column('contact_phone', sa.Boolean(), nullable=True),
    sa.Column('contact_mail', sa.Boolean(), nullable=True),
    sa.Column('contact_sms', sa.Boolean(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('covers_fees', sa.Boolean(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], name='fk_donations_campaign_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_donations_person_id', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_donations_source_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_payment_intent_id')
    )
    op.create_table('interactions',
    sa.Column('interaction_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('voter_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('interaction_type', sa.String(length=100), nullable=False),
    sa.Column('interaction_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('outcome', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['voter_id'], ['voters.voter_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('interaction_id')
    )
    op.create_index(op.f('ix_interactions_campaign_id'), 'interactions', ['campaign_id'], unique=False)
    op.create_index(op.f('ix_interactions_interaction_type'), 'interactions', ['interaction_type'], unique=False)
    op.create_index(op.f('ix_interactions_voter_id'), 'interactions', ['voter_id'], unique=False)
    op.create_table('party_affiliation_history',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('party_affiliation', sa.String(length=100), nullable=True),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_to', sa.Date(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_party_affiliation_history_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_party_affiliation_history_source_id'),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('person_addresses',
    sa.Column('person_address_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('address_type', sa.Enum('Home', 'Work', 'Mailing', 'Other', name='address_type_enum'), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('occupancy_status', sa.Enum('Owner', 'Renter', 'Temporary', 'Unknown', name='occupancy_status_enum'), nullable=True),
    sa.Column('move_in_date', sa.Date(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.address_id'], name='fk_person_addresses_address_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_addresses_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_addresses_source_id'),
    sa.PrimaryKeyConstraint('person_address_id')
    )
    op.create_table('person_campaign_interactions',
    sa.Column('interaction_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.Enum('ContactForm', 'Donation', 'Endorsement', 'Volunteer', 'Other', name='interaction_type_enum'), nullable=True),
    sa.Column('interaction_date', sa.Date(), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('follow_up_needed', sa.Boolean(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], name='fk_person_campaign_interactions_campaign_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_campaign_interactions_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_campaign_interactions_source_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='fk_person_campaign_interactions_user_id'),
    sa.PrimaryKeyConstraint('interaction_id')
    )
    op.create_table('person_emails',
    sa.Column('email_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.LargeBinary(), nullable=True),
    sa.Column('email_type', sa.Enum('Personal', 'Work', 'Other', name='email_type_enum'), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_emails_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_emails_source_id'),
    sa.PrimaryKeyConstraint('email_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('person_employers',
    sa.Column('employer_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('employer_name', sa.String(length=255), nullable=True),
    sa.Column('occupation', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_employers_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_employers_source_id'),
    sa.PrimaryKeyConstraint('employer_id')
    )
    op.create_table('person_identifiers',
    sa.Column('identifier_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('identifier_type', sa.String(length=50), nullable=False),
    sa.Column('identifier_value', sa.LargeBinary(), nullable=False),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('issue_date', sa.Date(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('verification_status', sa.Enum('Verified', 'Pending', 'Invalid', name='verification_status_enum'), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_identifiers_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_identifiers_source_id'),
    sa.PrimaryKeyConstraint('identifier_id'),
    sa.UniqueConstraint('identifier_value')
    )
    op.create_table('person_merges',
    sa.Column('merge_id', sa.Integer(), nullable=False),
    sa.Column('merged_from_person_id', sa.Integer(), nullable=False),
    sa.Column('merged_to_person_id', sa.Integer(), nullable=False),
    sa.Column('merge_date', sa.Date(), nullable=True),
    sa.Column('merge_reason', sa.String(), nullable=True),
    sa.Column('merge_confidence', sa.Integer(), nullable=True),
    sa.Column('merge_method', sa.Enum('Manual', 'Automated', name='merge_method_enum'), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['merged_from_person_id'], ['persons.person_id'], name='fk_person_merges_merged_from_person_id'),
    sa.ForeignKeyConstraint(['merged_to_person_id'], ['persons.person_id'], name='fk_person_merges_merged_to_person_id'),
    sa.PrimaryKeyConstraint('merge_id')
    )
    op.create_table('person_other_contacts',
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('contact_type', sa.String(length=100), nullable=True),
    sa.Column('contact_value', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_other_contacts_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_other_contacts_source_id'),
    sa.PrimaryKeyConstraint('contact_id')
    )
    op.create_table('person_payment_info',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('payment_type', sa.Enum('CreditCard', 'BankAccount', 'PayPal', 'Other', name='payment_type_enum'), nullable=True),
    sa.Column('details', app.models.person_identifier.EncryptedString(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_payment_info_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_payment_info_source_id'),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('person_phones',
    sa.Column('phone_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.LargeBinary(), nullable=True),
    sa.Column('phone_type', sa.Enum('Mobile', 'Home', 'Work', 'Other', name='phone_type_enum'), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_phones_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_phones_source_id'),
    sa.PrimaryKeyConstraint('phone_id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('person_relationships',
    sa.Column('relationship_id', sa.Integer(), nullable=False),
    sa.Column('person_id1', sa.Integer(), nullable=False),
    sa.Column('person_id2', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.Enum('Family', 'Spouse', 'Friend', 'Colleague', 'Other', name='relationship_type_enum'), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id1'], ['persons.person_id'], name='fk_person_relationships_person_id1', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['person_id2'], ['persons.person_id'], name='fk_person_relationships_person_id2', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_relationships_source_id'),
    sa.PrimaryKeyConstraint('relationship_id'),
    sa.UniqueConstraint('person_id1', 'person_id2', name='uq_person_relationship')
    )
    op.create_table('person_social_media',
    sa.Column('social_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.String(length=50), nullable=True),
    sa.Column('handle', sa.String(length=255), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_person_social_media_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_person_social_media_source_id'),
    sa.PrimaryKeyConstraint('social_id'),
    sa.UniqueConstraint('handle')
    )
    op.create_table('positions',
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('body_id', sa.Integer(), nullable=False),
    sa.Column('position_title', sa.String(length=255), nullable=True),
    sa.Column('term_length', sa.Integer(), nullable=True),
    sa.Column('salary', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('current_holder_person_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['body_id'], ['government_bodies.body_id'], name='fk_positions_body_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['current_holder_person_id'], ['persons.person_id'], name='fk_positions_current_holder_person_id'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_positions_source_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='fk_positions_user_id'),
    sa.PrimaryKeyConstraint('position_id')
    )
    op.create_table('agenda_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agenda_id', sa.Integer(), nullable=False),
    sa.Column('heading', sa.String(), nullable=True),
    sa.Column('file_prefix', sa.String(), nullable=True),
    sa.Column('item_text', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['agenda_id'], ['agendas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('agenda_id', 'item_text', name='_agenda_item_text_uc')
    )
    op.create_table('survey_results',
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('voter_id', sa.Integer(), nullable=False),
    sa.Column('interaction_id', sa.Integer(), nullable=True),
    sa.Column('survey_date', sa.Date(), nullable=True),
    sa.Column('survey_source', sa.String(length=255), nullable=True),
    sa.Column('responses', sa.JSON(), nullable=True),
    sa.Column('search_vector', postgresql.TSVECTOR(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('response_time', sa.Integer(), nullable=True),
    sa.Column('survey_channel', sa.Enum('Online', 'Phone', 'InPerson', 'Mail', name='survey_channel_enum'), nullable=True),
    sa.Column('completion_status', sa.Enum('Complete', 'Partial', 'Abandoned', name='completion_status_enum'), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['interaction_id'], ['interactions.interaction_id'], name='fk_survey_results_interaction_id'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_survey_results_source_id'),
    sa.ForeignKeyConstraint(['voter_id'], ['voters.voter_id'], name='fk_survey_results_voter_id'),
    sa.PrimaryKeyConstraint('survey_id')
    )
    op.create_table('voter_history',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('election_date', sa.Date(), nullable=True),
    sa.Column('election_type', sa.String(length=100), nullable=True),
    sa.Column('voted', sa.Boolean(), nullable=True),
    sa.Column('voting_method', sa.Enum('InPerson', 'Mail', 'Absentee', 'Other', name='voting_method_enum'), nullable=True),
    sa.Column('turnout_reason', sa.String(), nullable=True),
    sa.Column('survey_link_id', sa.Integer(), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], name='fk_voter_history_person_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], name='fk_voter_history_source_id'),
    sa.ForeignKeyConstraint(['survey_link_id'], ['survey_results.survey_id'], name='fk_voter_history_survey_link_id'),
    sa.PrimaryKeyConstraint('history_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('voter_history')
    op.drop_table('survey_results')
    op.drop_table('agenda_items')
    op.drop_table('positions')
    op.drop_table('person_social_media')
    op.drop_table('person_relationships')
    op.drop_table('person_phones')
    op.drop_table('person_payment_info')
    op.drop_table('person_other_contacts')
    op.drop_table('person_merges')
    op.drop_table('person_identifiers')
    op.drop_table('person_employers')
    op.drop_table('person_emails')
    op.drop_table('person_campaign_interactions')
    op.drop_table('person_addresses')
    op.drop_table('party_affiliation_history')
    op.drop_index(op.f('ix_interactions_voter_id'), table_name='interactions')
    op.drop_index(op.f('ix_interactions_interaction_type'), table_name='interactions')
    op.drop_index(op.f('ix_interactions_campaign_id'), table_name='interactions')
    op.drop_table('interactions')
    op.drop_table('donations')
    op.drop_table('campaign_voters')
    op.drop_table('agendas')
    op.drop_table('address_districts')
    op.drop_table('persons')
    op.drop_table('government_bodies')
    op.drop_index('idx_districts_geom', table_name='districts', postgresql_using='gist')
    op.drop_table('districts')
    op.drop_table('campaigns')
    op.drop_index('idx_addresses_geom', table_name='addresses', postgresql_using='gist')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_voters_zip_code'), table_name='voters')
    op.drop_index(op.f('ix_voters_voter_registration_id'), table_name='voters')
    op.drop_index(op.f('ix_voters_phone_number'), table_name='voters')
    op.drop_index(op.f('ix_voters_last_name'), table_name='voters')
    op.drop_index(op.f('ix_voters_email_address'), table_name='voters')
    op.drop_table('voters')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('subscriptions')
    op.drop_table('data_sources')
    op.drop_table('backup_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
