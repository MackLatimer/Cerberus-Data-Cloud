"""Initial database schema setup

Revision ID: 21c161b20e78
Revises: 
Create Date: 2025-07-09 20:11:14.431374

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '21c161b20e78'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaigns',
    sa.Column('campaign_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('campaign_name', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('campaign_id'),
    sa.UniqueConstraint('campaign_name')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('survey_questions',
    sa.Column('question_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=False),
    sa.Column('possible_answers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('voters',
    sa.Column('voter_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=50), nullable=True),
    sa.Column('street_address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('county', sa.String(length=100), nullable=True),
    sa.Column('precinct', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email_address', sa.String(length=255), nullable=True),
    sa.Column('registration_status', sa.String(length=50), nullable=True),
    sa.Column('voter_registration_id', sa.String(length=100), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('party_affiliation', sa.String(length=100), nullable=True),
    sa.Column('engagement_score', sa.Integer(), nullable=True),
    sa.Column('last_contacted_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('preferred_contact_method', sa.String(length=50), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('source_campaign_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['source_campaign_id'], ['campaigns.campaign_id'], ),
    sa.PrimaryKeyConstraint('voter_id')
    )
    with op.batch_alter_table('voters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_voters_email_address'), ['email_address'], unique=True)
        batch_op.create_index(batch_op.f('ix_voters_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_voters_phone_number'), ['phone_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_voters_voter_registration_id'), ['voter_registration_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_voters_zip_code'), ['zip_code'], unique=False)

    op.create_table('campaign_voters',
    sa.Column('campaign_voter_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('voter_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['voter_id'], ['voters.voter_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('campaign_voter_id'),
    sa.UniqueConstraint('campaign_id', 'voter_id', name='uq_campaign_voter')
    )
    op.create_table('interactions',
    sa.Column('interaction_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('voter_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('interaction_type', sa.String(length=100), nullable=False),
    sa.Column('interaction_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('outcome', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['voter_id'], ['voters.voter_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('interaction_id')
    )
    with op.batch_alter_table('interactions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_interactions_campaign_id'), ['campaign_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_interactions_interaction_type'), ['interaction_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_interactions_voter_id'), ['voter_id'], unique=False)

    op.create_table('survey_responses',
    sa.Column('response_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('interaction_id', sa.Integer(), nullable=True),
    sa.Column('voter_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('response_value', sa.Text(), nullable=True),
    sa.Column('response_values', sa.JSON(), nullable=True),
    sa.Column('responded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['interaction_id'], ['interactions.interaction_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['survey_questions.question_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['voter_id'], ['voters.voter_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('response_id')
    )
    with op.batch_alter_table('survey_responses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_survey_responses_question_id'), ['question_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_survey_responses_voter_id'), ['voter_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('signups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('campaign_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('endorsed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('wants_to_get_involved', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('signups_pkey')),
    sa.UniqueConstraint('campaign_id', 'email', name=op.f('unique_email_per_campaign'))
    )
    with op.batch_alter_table('signups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_signups_campaign_id'), ['campaign_id'], unique=False)

    with op.batch_alter_table('survey_responses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_survey_responses_voter_id'))
        batch_op.drop_index(batch_op.f('ix_survey_responses_question_id'))

    op.drop_table('survey_responses')
    with op.batch_alter_table('interactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_interactions_voter_id'))
        batch_op.drop_index(batch_op.f('ix_interactions_interaction_type'))
        batch_op.drop_index(batch_op.f('ix_interactions_campaign_id'))

    op.drop_table('interactions')
    op.drop_table('campaign_voters')
    with op.batch_alter_table('voters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_voters_zip_code'))
        batch_op.drop_index(batch_op.f('ix_voters_voter_registration_id'))
        batch_op.drop_index(batch_op.f('ix_voters_phone_number'))
        batch_op.drop_index(batch_op.f('ix_voters_last_name'))
        batch_op.drop_index(batch_op.f('ix_voters_email_address'))

    op.drop_table('voters')
    op.drop_table('survey_questions')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('campaigns')
    # ### end Alembic commands ###
