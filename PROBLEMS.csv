"File Path","Line #","Issue Description","Severity","Recommended Fix"
"cerberus_universal_backend/requirements.txt","9","Vulnerable gunicorn version 21.2.0 found. Known vulnerabilities: GHSA-w3h3-4rj7-4ph4, GHSA-hc5x-x2vx-497g.","High","Upgrade gunicorn to the latest version (>= 22.0.0)."
"cerberus_universal_backend/requirements.txt","10","Vulnerable flask-cors version 4.0.0 found. Multiple known vulnerabilities.","High","Upgrade flask-cors to the latest version (>= 4.0.1)."
"cerberus_universal_backend/app/config.py","61","Default fallback SECRET_KEY is hardcoded and insecure. If no environment variable is set, the application will use a known, weak key.","Critical","Remove the hardcoded default key. The application should fail to start if the SECRET_KEY is not explicitly set in the environment or fetched from a secrets manager."
"cerberus_universal_backend/app/config.py","64","The PGCRYPTO_SECRET_KEY used for database encryption is hardcoded. Anyone with source code access can decrypt sensitive data.","Critical","Remove the hardcoded key. This key must be loaded from a secure source like Google Secret Manager or an environment variable and should never have a default value."
"cerberus_universal_backend/app/routes/voters.py","15","The file calls `encrypt_data` and `decrypt_data` which are not defined or imported in this file, causing a runtime crash.","Critical","Import the encryption and decryption functions from a centralized utility file (e.g., `app.utils.security`)."
"cerberus_universal_backend/app/routes/voters.py","305","In the CSV upload, the email is assigned the plaintext `email_str` instead of the `encrypted_email`, bypassing encryption for this feature.","Critical","Change `email=email_str` to `email=encrypted_email` to ensure data is encrypted before being saved."
"cerberus_universal_backend/app/routes/voters.py","10","The entire `voters_api_bp` blueprint lacks any authentication or authorization, allowing any unauthenticated user to create, read, update, and delete sensitive voter information.","Critical","Implement a robust authentication and authorization mechanism (e.g., using JWTs or session-based auth) and apply it to all non-public endpoints."
"cerberus_universal_backend/app/routes/donate.py","167","In the `update_donation_details` function, email and phone number are updated with plaintext values from the request, overwriting encrypted data with unencrypted data.","Critical","Encrypt the email and phone number values before updating the donation record, similar to how it's done in the `create_payment_intent` function."
"cerberus_universal_backend/app/routes/agendas.py","31","The `search` function is vulnerable to SQL Injection. The `keyword` parameter is used in an f-string to construct a LIKE query, which is not safe.","Critical","Use parameterized queries. The keyword should be passed as a parameter to the `ilike` function, e.g., `field.ilike('%' + keyword + '%')`, to let the SQLAlchemy engine handle sanitization."
"cerberus_universal_backend/app/routes/agendas.py","52","The subscription webhooks (`/webhook/order_canceled` and `/webhook/order_renewed`) have no security checks (e.g., signature verification), allowing an attacker to activate/deactivate any subscription.","High","Implement webhook signature verification using a shared secret, similar to how the Stripe webhook is handled."
"cerberus_frontend/lib/pages/report/report_page.dart","52","The `_apiBaseUrl` is hardcoded to use `http` instead of `https`, sending all data in plaintext over the network.","Critical","Change the URL to use `https` and ensure the backend server is configured for SSL/TLS. All API URLs should be loaded from a secure configuration source."
"cerberus_frontend/lib/api_config.dart","1","The API base URL is hardcoded. This makes it difficult to switch between development, staging, and production environments.","Medium","Implement a proper configuration management system for the frontend (e.g., using environment variables or different build flavors) to manage API endpoints for different environments."
"emmons_frontend/assets/campaign_configs/emmons.json","12","Stripe public key is hardcoded in a version-controlled JSON file. While public, this is poor practice for managing keys.","Medium","Move all keys and secrets to a proper configuration management system that is not checked into version control."
"cerberus_universal_backend/app/routes/donate.py","12","The `encrypt_data` and `decrypt_data` functions are duplicated in `donate.py`. Critical security functions should not be duplicated.","Medium","Create a single, centralized security utility file (e.g., `app/lib/security.py`) for these functions and import them where needed."
"cerberus_campaigns_backend/","N/A","This entire project directory appears to be a non-functional skeleton. It contains models but no routes or business logic, making it dead code.","Medium","Remove the `cerberus_campaigns_backend` directory from the repository to reduce clutter and confusion."
"cerberus_frontend/pubspec.yaml","N/A","The project's dependencies are likely outdated. The `flutter pub outdated` command failed due to an SDK version conflict, which is also an issue.","Medium","Resolve the SDK version conflict by updating the `video_player` dependency or the Flutter SDK constraint. Then, run `flutter pub outdated` and update all dependencies to their latest stable versions."
"emmons_frontend/pubspec.yaml","N/A","The project's dependencies are likely outdated. The environment prevented a direct check.","Medium","Run `flutter pub outdated` in the project directory and update all dependencies to their latest stable versions."
"cerberus_universal_backend/app/routes/voters.py","23","The public signup endpoint does not perform sufficient input validation on fields like `first_name` and `last_name`, which could lead to data quality issues or XSS if the data is rendered elsewhere without escaping.","Low","Implement server-side validation and sanitization for all user-provided input. For example, check for reasonable length and character sets."
"cerberus_universal_backend/app/routes/agendas.py","41","The `get_municipalities` endpoint returns a hardcoded list of names, making the application inflexible.","Low","Modify the query to fetch the list of all distinct municipalities directly from the `GovernmentBody` table."
