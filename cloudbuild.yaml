steps:
  # Step 1: Build the Docker image for cerberus_report_backend (agenda-api)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-report-backend'
    dir: 'cerberus_report_backend'
    waitFor: ['-']
    args: [
      'build',
      '-t', 'us-south1-docker.pkg.dev/cerberus-data-cloud/cerberus-images/agenda-api:v1', # Updated to Artifact Registry
      '-f', 'Dockerfile',
      '.'
    ]

  # Step 2: Build the Docker image for cerberus_campaigns_backend (campaigns-api)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-campaigns-backend'
    dir: 'cerberus_campaigns_backend' # Change working directory to the backend's root
    waitFor: ['-']
    args: [
      'build',
      '-t', 'us-south1-docker.pkg.dev/cerberus-data-cloud/cerberus-images/campaigns-api:v1', # Updated to Artifact Registry
      '-f', 'Dockerfile', # Dockerfile is now in the current context
      '.' # Build context is now cerberus_campaigns_backend
    ]

  # Step 3: Build the Docker image for emmons_frontend (web-frontend)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-emmons-frontend'
    waitFor: ['-']
    args: [
      'build',
      '-t', 'us-south1-docker.pkg.dev/cerberus-data-cloud/cerberus-images/emmons-frontend:v1', # Updated to Artifact Registry
      '-f', 'emmons_frontend/Dockerfile', # Use the Dockerfile in its specific directory
      'emmons_frontend' # Build context is the root of the repository
    ]

# List of images to be pushed to Artifact Registry
images:
  - 'us-south1-docker.pkg.dev/cerberus-data-cloud/cerberus-images/agenda-api:v1'
  - 'us-south1-docker.pkg.dev/cerberus-data-cloud/cerberus-images/campaigns-api:v1'
  - 'us-south1-docker.pkg.dev/cerberus-data-cloud/cerberus-images/emmons-frontend:v1'

# Specify the service account for Cloud Build to use for executing these steps
# Ensure this service account has 'Artifact Registry Writer' role for the project or specifically for the 'cerberus-images' repository.
serviceAccount: 'projects/cerberus-data-cloud/serviceAccounts/cerberus-service-account@cerberus-data-cloud.iam.gserviceaccount.com'

# Explicitly set logging options as required when a custom service account is used.
options:
  logging: CLOUD_LOGGING_ONLY