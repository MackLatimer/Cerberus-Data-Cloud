steps:
# Build and deploy the backend
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Backend Docker Image'
  args: [ 'build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-backend-repo/cerberus-backend:$COMMIT_SHA', './cerberus_universal_backend' ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Backend Docker Image'
  args: [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-backend-repo/cerberus-backend:$COMMIT_SHA' ]

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Backend to Cloud Run'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'cerberus-backend'
    - '--image'
    - '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-backend-repo/cerberus-backend:$COMMIT_SHA'
    - '--region'
    - '${_REGION}'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--add-cloudsql-instances'
    - '${_INSTANCE_CONNECTION_NAME}'
    - '--set-secrets=DB_PASSWORD=cerberus-db-password:latest,STRIPE_API_KEY=stripe-api-key:latest'

# Build and deploy the cerberus_frontend
- name: 'gcr.io/cloud-builders/npm'
  id: 'Install Firebase Tools'
  args: ['install', '-g', 'firebase-tools']

- name: 'ubuntu'
  id: 'Build Cerberus Frontend'
  args: ['bash', '-c', 'cd cerberus_frontend && flutter build web']

- name: 'gcr.io/cloud-builders/firebase'
  id: 'Deploy Cerberus Frontend'
  args: ['deploy', '--only', 'hosting:cerberus']

# Build and deploy the universal_campaign_frontend
- name: 'ubuntu'
  id: 'Build Universal Campaign Frontend'
  args: ['bash', '-c', 'cd universal_campaign_frontend && flutter build web']

- name: 'gcr.io/cloud-builders/firebase'
  id: 'Deploy Universal Campaign Frontend'
  args: ['deploy', '--only', 'hosting:campaigns']

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-backend-repo/cerberus-backend:$COMMIT_SHA'

options:
  substitution_option: 'ALLOW_LOOSE'
substitutions:
  _REGION: 'us-south1'
  _INSTANCE_CONNECTION_NAME: 'cerberus-data-cloud:us-south1:cerberus-db'
