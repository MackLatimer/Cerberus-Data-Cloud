steps:
# Build and deploy the backend
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Backend Docker Image'
  args: [ 'build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-images/cerberus-backend:$BUILD_ID', './cerberus_universal_backend' ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Backend Docker Image'
  args: [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-images/cerberus-backend:$BUILD_ID' ]

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Backend to Cloud Run'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'cerberus-backend'
    - '--image'
    - '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-images/cerberus-backend:$BUILD_ID'
    - '--region'
    - '${_REGION}'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--add-cloudsql-instances'
    - '${_INSTANCE_CONNECTION_NAME}'
    - '--set-secrets=DB_USER=DB_USER:latest,DB_PASS=DB_PASSWORD:latest,DB_NAME=DB_NAME:latest,DB_CONNECTION_NAME=DB_CONNECTION_NAME:latest,FLASK_SECRET_KEY=FLASK_SECRET_KEY:latest,PGCRYPTO_SECRET_KEY=PGCRYPTO_SECRET_KEY:latest,BLAIR_STRIPE_SECRET_KEY=BLAIR_STRIPE_SECRET_KEY:latest,COX_STRIPE_SECRET_KEY=COX_STRIPE_SECRET_KEY:latest,EMMONS_STRIPE_SECRET_KEY=EMMONS_STRIPE_SECRET_KEY:latest,GAUNTT_STRIPE_SECRET_KEY=GAUNTT_STRIPE_SECRET_KEY:latest,MINTZ_STRIPE_SECRET_KEY=MINTZ_STRIPE_SECRET_KEY:latest,TICE_STRIPE_SECRET_KEY=TICE_STRIPE_SECRET_KEY:latest,TULLOCH_STRIPE_SECRET_KEY=TULLOCH_STRIPE_SECRET_KEY:latest,LEUDEKE_STRIPE_SECRET_KEY=LEUDEKE_STRIPE_SECRET_KEY:latest,WHITSON_STRIPE_SECRET_KEY=WHITSON_STRIPE_SECRET_KEY:latest,BLAIR_STRIPE_WEBHOOK_KEY=BLAIR_STRIPE_WEBHOOK_KEY:latest,COX_STRIPE_WEBHOOK_KEY=COX_STRIPE_WEBHOOK_KEY:latest,EMMONS_STRIPE_WEBHOOK_KEY=EMMONS_STRIPE_WEBHOOK_KEY:latest,GAUNTT_STRIPE_WEBHOOK_KEY=GAUNTT_STRIPE_WEBHOOK_KEY:latest,MINTZ_STRIPE_WEBHOOK_KEY=MINTZ_STRIPE_WEBHOOK_KEY:latest,TICE_STRIPE_WEBHOOK_KEY=TICE_STRIPE_WEBHOOK_KEY:latest,TULLOCH_STRIPE_WEBHOOK_KEY=TULLOCH_STRIPE_WEBHOOK_KEY:latest,LEUDEKE_STRIPE_WEBHOOK_KEY=LEUDEKE_STRIPE_WEBHOOK_KEY:latest,WHITSON_STRIPE_WEBHOOK_KEY=WHITSON_STRIPE_WEBHOOK_KEY:latest'

# Build and deploy the cerberus_frontend
- name: 'gcr.io/cloud-builders/npm'
  id: 'Install Firebase Tools'
  args: ['install', '-g', 'firebase-tools']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Install Flutter SDK for Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="$PATH:/flutter/bin" # Ensure PATH is set for this step
      FLUTTER_VERSION="3.22.2" # Or whatever stable version you prefer
      FLUTTER_SDK_URL="https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz"

      echo "Downloading Flutter SDK version ${FLUTTER_VERSION}..."
      wget -q -O /tmp/flutter.tar.xz ${FLUTTER_SDK_URL}
      echo "Extracting Flutter SDK..."
      mkdir -p /flutter
      tar -xf /tmp/flutter.tar.xz -C /flutter --strip-components=1
      rm /tmp/flutter.tar.xz
      echo "Running flutter doctor..."
      flutter doctor

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Get dependencies for Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="$$PATH:/flutter/bin"
      cd cerberus_frontend && flutter pub get

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Build Cerberus Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="$$PATH:/flutter/bin"
      cd cerberus_frontend && flutter build web --release

- name: 'gcr.io/cloud-builders/firebase'
  id: 'Deploy Cerberus Frontend'
  args: ['deploy', '--only', 'hosting:cerberus']

# Build and deploy the universal_campaign_frontend
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Install Flutter SDK for Universal Campaign Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="$PATH:/flutter/bin" # Ensure PATH is set for this step
      FLUTTER_VERSION="3.22.2" # Or whatever stable version you prefer
      FLUTTER_SDK_URL="https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz"

      echo "Downloading Flutter SDK version ${FLUTTER_VERSION}..."
      wget -q -O /tmp/flutter.tar.xz ${FLUTTER_SDK_URL}
      echo "Extracting Flutter SDK..."
      mkdir -p /flutter
      tar -xf /tmp/flutter.tar.xz -C /flutter --strip-components=1
      rm /tmp/flutter.tar.xz
      echo "Running flutter doctor..."
      flutter doctor

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Get dependencies for Universal Campaign Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="$$PATH:/flutter/bin"
      cd universal_campaign_frontend && flutter pub get

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Build Universal Campaign Frontend'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export PATH="$$PATH:/flutter/bin"
      cd universal_campaign_frontend && flutter build web --release

- name: 'gcr.io/cloud-builders/firebase'
  id: 'Deploy Universal Campaign Frontend'
  args: ['deploy', '--only', 'hosting:campaigns']

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/cerberus-images/cerberus-backend:$BUILD_ID'

options:
  substitution_option: 'ALLOW_LOOSE'
  volumes:
    - name: 'flutter_sdk'
      path: '/flutter'
substitutions:
  _REGION: 'us-south1'
  _INSTANCE_CONNECTION_NAME: 'cerberus-data-cloud:us-south1:cerberus-db'
  _PROJECT_ID: 'cerberus-data-cloud'